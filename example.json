{
  "openapi": "3.0.0",
  "info": {
    "title": "Water Order API",
    "description": "This documentation is created by Getir Developers for Getir Water Marketplace Integration.\nThis is a firm api document example. </br></br><b>Server: Marketplace, Client: Getir-Water</b>\n",
    "contact": {
      "email": "fatih.gul@getir.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/getir-su/getir-water-api-v1/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "order",
      "description": "Give an order",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "order status update",
      "description": "Update an order status"
    }
  ],
  "paths": {
    "/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Give an order on water marketplace",
        "operationId": "giveOrder",
        "requestBody": {
          "$ref": "#/components/requestBodies/Order"
        },
        "responses": {
          "201": {
            "description": "Order is placed succesfully"
          }
        }
      }
    },
    "/order/status": {
      "put": {
        "tags": [
          "order status update"
        ],
        "summary": "Update Status for Water Order",
        "operationId": "updateStatus",
        "requestBody": {
          "$ref": "#/components/requestBodies/OrderStatus"
        },
        "responses": {
          "201": {
            "description": "Order is placed succesfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "External unique id of order"
          },
          "orderCreateTime": {
            "type": "string",
            "description": "Order date time",
            "format": "date-time"
          },
          "deliveryType": {
            "type": "string",
            "description": "Delivery date time",
            "enum": [
              "scheduled",
              "immediate"
            ]
          },
          "deliveryTime": {
            "type": "string",
            "description": "Delivery date time is filled if delivery type is scheduled, otherwise null",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status 350: scheduled, 500: preparing, 700: onway, 900: delivered, 1500: canceled_admin, 1600: canceled_vendor",
            "enum": [
              "350",
              "500",
              "700",
              "900",
              "1500",
              "1600"
            ]
          },
          "paymentMethod": {
            "type": "integer",
            "description": "0:Others, 1: Cash",
            "enum": [
              0,
              1
            ]
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "Cart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order_Cart"
            }
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique id of user"
          },
          "username": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "description": "User's delivery address"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "OrderStatus": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Order Status 350: scheduled, 500: preparing, 550: prepared, 700: onway, 900: delivered, 1500: canceled_admin, 1600: canceled_vendor",
            "enum": [
              "350",
              "401",
              "403",
              "404",
              "500",
              "700",
              "900",
              "1500",
              "1600"
            ]
          }
        },
        "xml": {
          "name": "OrderStatus"
        }
      },
      "Order_Cart": {
        "required": [
          "productId",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Unique product id/code"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of ordered items",
            "format": "int64"
          }
        }
      }
    },
    "requestBodies": {
      "Order": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        },
        "required": true
      },
      "OrderStatus": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          }
        },
        "required": true
      }
    }
  }
}
